{"version":3,"sources":["components/hoc/withAuthRedirect.js","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","ProfileContainer","userId","match","params","setUser","getStatus","refreshProfile","prevProps","prevState","snapshot","isOwner","profile","status","updateStatus","savePhoto","compose","profilePage","saveProfile","withRouter"],"mappings":"+NAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAKVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKC,MAAMN,OAET,cAACG,EAAD,eAAeE,KAAKC,QAFI,cAAC,IAAD,CAAUC,GAAG,eAHT,GACXC,IAAML,WAUtC,OAFqCM,YAAQX,EAARW,CAAqCL,K,yJCTxEM,E,oKACF,WACI,IAAIC,EAASN,KAAKC,MAAMM,MAAMC,OAAOF,OACrCN,KAAKC,MAAMQ,QAAQH,GACnBN,KAAKC,MAAMS,UAAUJ,K,+BAG3B,WACIN,KAAKW,mB,gCAGT,SAAmBC,EAAWC,EAAWC,GAC/Bd,KAAKC,MAAMM,MAAMC,OAAOF,QAAUM,EAAUL,MAAMC,OAAOF,QACzDN,KAAKW,mB,oBAKb,WACA,OAAc,8BACZ,cAAC,IAAD,2BAAcX,KAAKC,OAAnB,IACUc,SAAUf,KAAKC,MAAMM,MAAMC,OAAOF,OAClCU,QAAShB,KAAKC,MAAMe,QACpBC,OAAQjB,KAAKC,MAAMgB,OACnBC,aAAclB,KAAKC,MAAMiB,aACzBC,UAAWnB,KAAKC,MAAMkB,mB,GAzBPhB,IAAML,WAyCtBsB,sBACbhB,aAToB,SAACV,GAAD,MAAY,CAChCsB,QAAStB,EAAM2B,YAAYL,QAC3BC,OAAQvB,EAAM2B,YAAYJ,UAOA,CAACR,YAASS,iBAAcR,cAAWS,cAAWG,kBACxEC,IAFaH,CAEAf","file":"static/js/4.53b67c95.chunk.js","sourcesContent":["import { Redirect } from 'react-router';\r\nimport React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  })\r\n\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n","import Profile from './Profile'\r\nimport React from 'react';\r\nimport {setUser, updateStatus, getStatus, savePhoto, saveProfile} from './../../redux/profileReducer'\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router';\r\nimport {withAuthRedirect} from './../hoc/withAuthRedirect'\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        this.props.setUser(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n  componentDidMount() {\r\n      this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n\r\n  }\r\n\r\n    render() {\r\n    return        <div>\r\n      <Profile  {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto}\r\n      />\r\n  </div>}\r\n}\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status\r\n})\r\n\r\n\r\n\r\n\r\nexport default compose (\r\n  connect (mapStateToProps, {setUser, updateStatus, getStatus, savePhoto, saveProfile}),\r\n  withRouter) (ProfileContainer)"],"sourceRoot":""}