{"version":3,"sources":["components/hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatus","useState","status","profileStatus","setProfileStatus","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","target","value","onMouseLeave","updateStatus","autoFocus","ProfileInfo","profile","className","s","description","src","photos","large","Post","item","message","likeCount","MyPosts","postsElements","posts","map","post","validateScheme","yup","shape","textOfMessage","typeError","min","max","postsBlock","initialValues","validateOnBlur","onSubmit","values","formikText","addPost","validationSchema","errors","touched","handleChange","handleBlur","handleSubmit","isValid","dirty","type","name","onBlur","disabled","onClick","MyPostsContainer","profilePage","newPostText","dispatch","formikPost","addPostActionCreator","onPostChange","text","onPostChangeActionCreator","Profile","ProfileContainer","userId","match","params","setUser","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.1d848a1d.chunk.js","sourcesContent":["import { Redirect } from 'react-router';\r\nimport React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  })\r\n\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__1YBCi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1YSs3\",\"posts\":\"MyPosts_posts__179A9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__GuOOt\"};","import {useEffect, useRef, useState} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [profileStatus, setProfileStatus] = useState(props.status)\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setProfileStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(profileStatus);\r\n    }\r\n\r\n    return <div>\r\n\r\n        {!editMode &&\r\n            <div>\r\n        <span onDoubleClick={() => setEditMode(true)}>\r\n            {props.status || '-----'}\r\n        </span>\r\n            </div>\r\n        }\r\n\r\n        {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={(e) => setProfileStatus(e.target.value)}\r\n                    onMouseLeave={() => deactivateEditMode()}\r\n                    value={profileStatus}\r\n                    autoFocus={true}/>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import Preloader from '../../common/preloader/preloader';\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatus from './ProfileStatus'\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return        <div>\r\n\r\n    <div className={s.description}>\r\n    <img src={props.profile.photos.large} />\r\n    <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n    </div>  \r\n    \r\n  </div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import s from './Post.module.css'\r\n\r\n\r\nconst Post = (props) => {\r\n    return    (\r\n    <div className={s.item}>\r\n      <img src='https://cs13.pikabu.ru/post_img/2021/04/15/5/og_og_1618467397286014585.jpg'></img>\r\n      {props.message}\r\n      <div>\r\n      {props.likeCount} likes\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Post;","import s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport React from 'react'\r\nimport { Formik } from \"formik\"\r\nimport * as yup from 'yup'\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postsElements = props.posts.map((post) => <Post message={post.message} likeCount={post.likeCount} />\r\n  )\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n\r\n  let onAddPost = (formikText) => {\r\n    props.addPost(formikText)\r\n  }\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.onPostChange(text)\r\n  }\r\n\r\n\r\n  const validateScheme = yup.object().shape({\r\n    textOfMessage: yup.string().typeError('Должно быть строкой').min(1, 'Напиши хоть что то').max(10, 'Максимум 10 символов')\r\n  })\r\n\r\n\r\n  return  <div> \r\n  <div className={s.postsBlock}>\r\n    <h3>My posts</h3>\r\n\r\n    <div>\r\n    <Formik\r\n    initialValues={\r\n      {\r\n        textOfMessage: ''\r\n      }\r\n    }\r\n    validateOnBlur\r\n    onSubmit={(values)=> {onAddPost(values.textOfMessage)}}\r\n    validationSchema = {validateScheme}\r\n    >\r\n      {\r\n        ({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) => { \r\n          return (\r\n          <div>\r\n            <input\r\n              type={'text'}\r\n              name={'textOfMessage'}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.textOfMessage}\r\n            />\r\n            {touched.textOfMessage && errors.textOfMessage && <p>{errors.textOfMessage}</p>}\r\n\r\n            <button\r\n                        disabled={!touched.textOfMessage}\r\n                        onClick={handleSubmit}\r\n                        type={'submit'}\r\n                        >\r\n                            Отправить\r\n                        </button>\r\n\r\n          </div>)\r\n        }\r\n      }\r\n\r\n    </Formik>\r\n    </div>\r\n\r\n\r\n    <div className={s.posts}>\r\n      {postsElements}\r\n    </div>\r\n    </div>\r\n\r\n  <div>\r\n\r\n    \r\n  </div>\r\n\r\n  </div>\r\n}\r\n\r\n\r\nexport default MyPosts;","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { onPostChangeActionCreator, addPostActionCreator } from './../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts'\r\n\r\nconst mapStateToProps = (state) => {\r\nreturn {\r\n  posts: state.profilePage.posts,\r\n  newPostText: state.profilePage.newPostText\r\n}\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (formikPost) => {dispatch(addPostActionCreator(formikPost))},\r\n    onPostChange: (text) => {dispatch(onPostChangeActionCreator(text))}\r\n  }\r\n}\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\n\r\nexport default MyPostsContainer;","import ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n    return        <div>\r\n      <ProfileInfo  profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n  </div>\r\n}\r\n\r\n\r\nexport default Profile;","import Profile from './Profile'\r\nimport React from 'react';\r\nimport { setUser, updateStatus, getStatus} from './../../redux/profileReducer'\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router';\r\nimport {withAuthRedirect} from './../hoc/withAuthRedirect'\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n            let userId = this.props.match.params.userId;\r\n            this.props.setUser(userId);\r\n            this.props.getStatus(userId)\r\n            \r\n  }\r\n\r\n  render() {\r\n    return        <div>\r\n      <Profile  {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n  </div>}\r\n}\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status\r\n})\r\n\r\n\r\n\r\n\r\nexport default compose (\r\n  connect (mapStateToProps, {setUser, updateStatus, getStatus}),\r\n  withRouter) (ProfileContainer)"],"sourceRoot":""}