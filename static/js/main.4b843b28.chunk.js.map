{"version":3,"sources":["redux/dialogsReducer.js","components/Users/users.module.css","components/common/preloader/preloader.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","api/api.js","components/Navbar/Navbar.module.css","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","redux/authReducer.js","components/Login/LoginTest.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","redux/usersReducer.js","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","redux/users-selector.js","components/Users/UsersContainer.jsx","redux/appReducer.js","redux/sidebarReducer.js","redux/redux-store.js","components/hoc/withSuspense.js","App.js","reportWebVitals.js","index.js","assets/images/preloader.svg","components/common/preloader/preloader.js","redux/profileReducer.js","assets/images/user.jpg","components/Header/Header.module.css","components/common/Paginator/paginator.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["ADD_MESSAGE","UPDATED_MESSAGE_TEXT","addMessageActionCreator","type","onMessageChangeActionCreator","text","newText","initialState","dialogsData","id","name","avatar","messagesData","message","status","newMessageText","dialogsReducer","state","action","newMessage","module","exports","ProfileStatus","props","useState","profileStatus","setProfileStatus","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","target","value","onMouseLeave","updateStatus","autoFocus","Contact","contactTitle","contactValue","ProfileData","goToEditMode","isOwner","onClick","profile","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","ProfileDataForm","ProfileInfo","className","s","description","src","photos","large","userPhoto","mainPhoto","files","length","savePhoto","Post","item","likeCount","MyPosts","postsElements","posts","post","validateScheme","yup","shape","textOfMessage","typeError","min","max","postsBlock","initialValues","validateOnBlur","onSubmit","values","formikText","addPost","validationSchema","errors","touched","handleChange","handleBlur","handleSubmit","isValid","dirty","onBlur","disabled","MyPostsContainer","connect","profilePage","newPostText","dispatch","formikPost","addPostActionCreator","onPostChange","onPostChangeActionCreator","Profile","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","unfollow","delete","getProfile","userId","console","warn","profileAPI","getStatus","put","photoFile","formData","FormData","append","authAPI","me","login","email","password","rememberMe","alert","logout","Header","header","loginBlock","isAuth","to","HeaderContainer","this","React","Component","auth","Navbar","nav","activeClassName","activeLink","SET_USER_DATA","AUTHORIZE_ME","setAuthUserData","getAuthUserData","a","resultCode","authReducer","loginFormSchema","Yup","required","loginThunk","log","messages","placeholder","component","htmlFor","messageError","News","Music","Settings","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unFollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","usersReducer","u","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","p","styles","selectedPage","unselectedPage","Users","small","some","getUsersSuperSelector","createSelector","usersPage","getPageSizeSelector","getTotalUsersCountSelector","getCurrentPageSelector","getIsFetchingSelector","getFollowingInProgressSelector","getIsAuthSelector","UsersAPIComponent","compose","items","totalCount","INITIALIZED_SUCCESS","initialized","friends","sidebarReducer","reducers","combineReducers","dialogsPage","sidebar","profileReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","AppContainer","initializeApp","promise","Promise","all","path","render","UsersContainer","LoginTest","SamuraiJSApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","preloader","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","GET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","formikPostText","setStatusActionCreator","setUser","file","newPost","postId"],"mappings":"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","file":"static/js/main.4b843b28.chunk.js","sourcesContent":["const ADD_MESSAGE = 'ADD_MESSAGE';\r\nconst UPDATED_MESSAGE_TEXT = 'UPDATED-MESSAGE-TEXT';\r\n\r\nexport const addMessageActionCreator = () => ({\r\n  type: ADD_MESSAGE\r\n})\r\nexport const onMessageChangeActionCreator = (text) => ({\r\n  type: UPDATED_MESSAGE_TEXT,\r\n  newText: text\r\n})\r\n\r\n\r\nlet initialState = {\r\n  dialogsData: [\r\n    { id: 1, name: 'Andrey', avatar: \"https://qph.fs.quoracdn.net/main-thumb-386254182-200-cjcqqkbawdwgclpwmezovuvcdevyhjxe.jpeg\" },\r\n    { id: 2, name: 'Masha', avatar: 'https://sun9-63.userapi.com/impg/8wa_JrPCDqv2DkGbEreYcXb97YCitafOJc3vzw/y9ibtyKafJI.jpg?size=130x130&quality=96&sign=a40deab55ac22afc3e8842bebe118ca2&c_uniq_tag=ddmbTYmVgnqkkwgt4OW4S7CTosceHQRP8G2GiulQFqY&type=album' },\r\n    { id: 3, name: 'Sasha', avatar: 'https://altaweboldal.hu/wp-content/uploads/2017/03/karpati-zsolt.jpg' },\r\n    { id: 4, name: 'Max', avatar: 'https://imagebox.cz.osobnosti.cz/foto/burak-celik-celik/T750905-9357b.jpg' }\r\n  ],\r\n\r\n  messagesData: [\r\n    { id: 1, message: 'hi', status: 'sent' },\r\n    { id: 2, message: 'Whatsup', status: 'recieved' },\r\n    { id: 3, message: 'How are you', status: 'sent' }\r\n  ],\r\n\r\n  newMessageText: ''\r\n};\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE: {\r\n      let newMessage = {\r\n        id: 4,\r\n        message: state.newMessageText,\r\n        status: \"sent\"\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        newMessageText: '',\r\n        messagesData: [...state.messagesData, newMessage]\r\n      };\r\n    }\r\n\r\n    case UPDATED_MESSAGE_TEXT:\r\n      {\r\n        return {\r\n          ...state,\r\n          newMessageText: action.newText\r\n        };\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__21nkm\",\"selectedPage\":\"users_selectedPage__2h0qz\",\"unselectedPage\":\"users_unselectedPage__3sovq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__28hvF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__GuOOt\"};","import {useEffect, useRef, useState} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [profileStatus, setProfileStatus] = useState(props.status)\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setProfileStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(profileStatus);\r\n    }\r\n\r\n    return <div>\r\n\r\n        {!editMode &&\r\n           <div> <b>Status</b>:\r\n               <span onDoubleClick={() => setEditMode(true)}>\r\n            {props.status || '-----'}\r\n        </span>\r\n            </div>\r\n        }\r\n\r\n        {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={(e) => setProfileStatus(e.target.value)}\r\n                    onMouseLeave={() => deactivateEditMode()}\r\n                    value={profileStatus}\r\n                    autoFocus={true}/>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import Preloader from '../../common/preloader/preloader';\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport userPhoto from './../../../assets/images/user.jpg'\r\nimport Profile from \"../Profile\";\r\nimport {useState} from \"react\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n\r\n    if (!props.profile) {\r\n      return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n\r\n    return        <div>\r\n\r\n    <div className={s.description}>\r\n        <img src={props.profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n        {\r\n            props.isOwner ? <div> <input type={'file'} onChange={onMainPhotoSelected}/>  </div> : <div></div>\r\n        }\r\n\r\n        { editMode ? <ProfileDataForm {...props} goToEditMode = {() => setEditMode(true)} /> : <ProfileData {...props} />}\r\n\r\n\r\n\r\n\r\n    <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n    </div>  \r\n    \r\n  </div>\r\n}\r\n\r\nconst Contact =({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n}\r\n\r\n\r\nconst ProfileData = (props, {goToEditMode}) => {\r\n    return     <div>\r\n        { props.isOwner && <button onClick={goToEditMode}>Редактировать</button> }\r\n        <div>\r\n            <b>Full Name</b>: {props.profile.fullName}\r\n        </div><div>\r\n        <b>Lookin' for a job</b>: {props.profile.lookingForAJob ? 'Yes' : 'No'}\r\n    </div>\r\n        { props.profile.lookingForAJob &&\r\n            <div><b>My professional skills</b>: {props.profile.lookingForAJobDescription} </div> }\r\n\r\n        <div>\r\n            <b>About me</b>: {props.profile.aboutMe}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(props.profile.contacts).map( key =>\r\n            <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />\r\n        )}\r\n        </div>\r\n\r\n\r\n    </div>\r\n}\r\nconst ProfileDataForm = (props) => {\r\n    return     <div>\r\n        <div>\r\n            <b>Full Name</b>: {props.profile.fullName}\r\n        </div><div>\r\n        <b>Lookin' for a job</b>: {props.profile.lookingForAJob ? 'Yes' : 'No'}\r\n    </div>\r\n        { props.profile.lookingForAJob &&\r\n            <div><b>My professional skills</b>: {props.profile.lookingForAJobDescription} </div> }\r\n\r\n        <div>\r\n            <b>About me</b>: {props.profile.aboutMe}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(props.profile.contacts).map( key =>\r\n            <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />\r\n        )}\r\n        </div>\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import s from './Post.module.css'\r\n\r\n\r\nconst Post = (props) => {\r\n    return    (\r\n    <div className={s.item}>\r\n      <img src='https://cs13.pikabu.ru/post_img/2021/04/15/5/og_og_1618467397286014585.jpg'></img>\r\n      {props.message}\r\n      <div>\r\n      {props.likeCount} likes\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Post;","import s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport React from 'react'\r\nimport { Formik } from \"formik\"\r\nimport * as yup from 'yup'\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postsElements = props.posts.map((post) => <Post message={post.message} likeCount={post.likeCount} />\r\n  )\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n\r\n  let onAddPost = (formikText) => {\r\n    props.addPost(formikText)\r\n  }\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.onPostChange(text)\r\n  }\r\n\r\n\r\n  const validateScheme = yup.object().shape({\r\n    textOfMessage: yup.string().typeError('Должно быть строкой').min(1, 'Напиши хоть что то').max(10, 'Максимум 10 символов')\r\n  })\r\n\r\n\r\n  return  <div> \r\n  <div className={s.postsBlock}>\r\n    <h3>My posts</h3>\r\n\r\n    <div>\r\n    <Formik\r\n    initialValues={\r\n      {\r\n        textOfMessage: ''\r\n      }\r\n    }\r\n    validateOnBlur\r\n    onSubmit={(values)=> {onAddPost(values.textOfMessage)}}\r\n    validationSchema = {validateScheme}\r\n    >\r\n      {\r\n        ({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) => { \r\n          return (\r\n          <div>\r\n            <input\r\n              type={'text'}\r\n              name={'textOfMessage'}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.textOfMessage}\r\n            />\r\n            {touched.textOfMessage && errors.textOfMessage && <p>{errors.textOfMessage}</p>}\r\n\r\n            <button\r\n                        disabled={!touched.textOfMessage}\r\n                        onClick={handleSubmit}\r\n                        type={'submit'}\r\n                        >\r\n                            Отправить\r\n                        </button>\r\n\r\n          </div>)\r\n        }\r\n      }\r\n\r\n    </Formik>\r\n    </div>\r\n\r\n\r\n    <div className={s.posts}>\r\n      {postsElements}\r\n    </div>\r\n    </div>\r\n\r\n  <div>\r\n\r\n    \r\n  </div>\r\n\r\n  </div>\r\n}\r\n\r\n\r\nexport default MyPosts;","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { onPostChangeActionCreator, addPostActionCreator } from './../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts'\r\n\r\nconst mapStateToProps = (state) => {\r\nreturn {\r\n  posts: state.profilePage.posts,\r\n  newPostText: state.profilePage.newPostText\r\n}\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (formikPost) => {dispatch(addPostActionCreator(formikPost))},\r\n    onPostChange: (text) => {dispatch(onPostChangeActionCreator(text))}\r\n  }\r\n}\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\n\r\nexport default MyPostsContainer;","import ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n    return        <div>\r\n      <ProfileInfo  isOwner={props.isOwner}\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatus}\r\n                    savePhoto={props.savePhoto} />\r\n      <MyPostsContainer />\r\n  </div>\r\n}\r\n\r\n\r\nexport default Profile;","import * as axios from \"axios\"\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: { 'API-KEY': 'b82a1b1b-57ed-4d0b-a714-0a5000161903' }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\r\n    },\r\n\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object')\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n\r\n     updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile)\r\n\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`).then(response => response.data)\r\n    },\r\n\r\n    login(email, password, rememberMe = false) {\r\n        alert('ЧТО ТО НЕ ТО!')\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3oOMQ\",\"item\":\"Navbar_item__DnhqG\",\"activeLink\":\"Navbar_activeLink__3a1Q1\",\"friendBlock\":\"Navbar_friendBlock__2M2qO\"};","import { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://avatars.mds.yandex.net/get-zen-logos/1520972/pub_5c6700cfb704ed00affe9fc5_5e6674fc8b6d587d1e98ba40/xxh'/>\r\n\r\n        <div className={s.loginBlock}>\r\n          {props.isAuth ? props.login : <NavLink to={'/login'}>Login</NavLink>}\r\n          \r\n        </div>\r\n\r\n        \r\n\r\n    \r\n        \r\n      </header> \r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n    return <Header {...this.props}/>\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n isAuth: state.auth.isAuth,\r\n login: state.auth.login\r\n}\r\n)\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(HeaderContainer)","import s from'./Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\nimport Sidebar from './Sidebar/Sidebar.jsx'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    return       <nav className={s.nav}>\r\n    <div className={s.item} >\r\n      <NavLink to='/profile/' activeClassName={s.activeLink}>Profile</NavLink>\r\n    </div>\r\n\r\n    <div className={s.item}>\r\n      <NavLink to='/dialogs/' activeClassName={s.activeLink}>Messages</NavLink>\r\n    </div>\r\n\r\n    <div className={s.item} > \r\n      <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to='/news/' activeClassName={s.activeLink}>News</NavLink>\r\n    </div>\r\n\r\n    <div className={s.item}>\r\n      <NavLink to='/music/' activeClassName={s.activeLink}>Music</NavLink>\r\n    </div>\r\n\r\n    <div className={s.item}>\r\n      <NavLink to='/settings/' activeClassName={s.activeLink}>Settings</NavLink>\r\n    </div>\r\n\r\n    <div>\r\n      Friends\r\n    </div>\r\n{/*  <div className={s.friendBlock}>\r\n    <Sidebar friends={props.state.friends} />\r\n    </div> */} \r\n  </nav>\r\n}\r\n\r\n\r\nexport default Navbar;","import {authAPI} from './../api/api'\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA'\r\nconst AUTHORIZE_ME = 'AUTHORIZE_ME'\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n\r\n        case AUTHORIZE_ME:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA, data: {id, email, login, isAuth}})\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const authMe = () => {\r\n    return (dispatch) => {\r\n        authAPI.me().then(data => {\r\n            if (data.resultCode === 0) {\r\n                let {id, email, login} = data.data\r\n\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const loginThunk = (email, password, rememberMe) => async (dispatch) => {\r\n    alert('Залогинился!')\r\n    console.log('12')\r\n\r\n\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        alert('Done!')\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        alert(\"Не вышло\")\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\n\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport * as Yup from 'yup';\r\n\r\nimport { loginThunk } from '../../redux/authReducer';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\n\r\nconst loginFormSchema = Yup.object({\r\n\r\n  email: Yup.string().email('Invalid e-mail').required('Required'),\r\n\r\n  password: Yup.string().min(8, 'Must be longer than 8 characters').required('Required'),\r\n\r\n});\r\n\r\n\r\n\r\nconst LoginTest = (props) => {\r\n\r\n  const onSubmit = (values) => {\r\n        props.loginThunk(values.email, values.password, values.rememberMe);\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n      <h1>Log in</h1>\r\n\r\n      <Formik\r\n\r\n        initialValues={{ email: '', password: '', rememberMe: false , messages: null}}\r\n\r\n        validationSchema={loginFormSchema}\r\n\r\n       \r\n\r\n        onSubmit={(values) => onSubmit(values)}\r\n\r\n      >\r\n\r\n        {() => (\r\n\r\n          <Form>\r\n\r\n            <div>\r\n\r\n              <Field type='email' name='email' placeholder='e-mail' />\r\n\r\n              <ErrorMessage name='email' component='p' />\r\n\r\n            </div>\r\n\r\n            <div>\r\n\r\n              <Field type='password' name='password' placeholder='password' />\r\n\r\n              <ErrorMessage name='password' component='p' />\r\n\r\n            </div>\r\n\r\n            <div>\r\n\r\n              <Field type='checkbox' name='rememberMe' />\r\n\r\n              <label htmlFor='rememberMe'>remember me</label>\r\n\r\n            </div>\r\n\r\n            <button type='submit'>Log in</button>\r\n\r\n            <p>{props.messageError}</p>\r\n\r\n          </Form>\r\n\r\n        )}\r\n\r\n      </Formik>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n  return{\r\n    isAuth : state.isAuth\r\n\r\n}}\r\n\r\nexport default connect(mapStateToProps, {loginThunk}) (LoginTest);\r\n","const News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default News;","const Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Music;","const Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Settings;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unFollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        let response = await usersAPI.follow(userId)\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(followSuccess(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        let response = await usersAPI.unfollow(userId)\r\n            if (response.data.resultCode == 0) {\r\n                dispatch(unFollowSuccess(userId))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","import styles from \"./paginator.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return (\r\n            <div>\r\n                {portionNumber > 1 &&\r\n                <button onClick={() => setPortionNumber(1)}>First Page</button>\r\n                }\r\n\r\n                {portionNumber > 1 &&\r\n                    <button onClick={ () => setPortionNumber(portionNumber - 1)}> Previous </button>}\r\n\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map((p) => {return <span className={p === currentPage ? styles.selectedPage : styles.unselectedPage} key={p} onClick={(e) => onPageChanged(p)}> {p} </span>})}\r\n\r\n                {portionNumber < portionCount &&\r\n                <button onClick={ () => setPortionNumber(portionNumber + 1)}>Next</button>}\r\n\r\n\r\n                {portionNumber < portionCount &&\r\n                    <button onClick={() => setPortionNumber(portionCount)}>Last Page</button>\r\n                }\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport styles from './users.module.css';\r\nimport userPhoto from './../../assets/images/user.jpg'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\n\r\nlet Users = (props) => {\r\n    return <div>\r\n        <Paginator currentPage={props.currentPage} totalItemsCount={props.totalUsersCount} pageSize={props.pageSize} onPageChanged={props.onPageChanged}/>\r\n\r\n\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={`/profile/` + u.id}> <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto} /> </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => props.unfollow(u.id)}>Unfollow</button>\r\n\r\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => props.follow(u.id)}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.city\"}</div>\r\n                        <div>{\"u.location.country\"}</div>\r\n\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Users","import { createSelector } from \"reselect\"\r\n\r\n\r\nconst getUsersSlct = (state) => {\r\n    return state.usersPage.users\r\n} \r\n\r\nexport const getUsersSuperSelector = createSelector(getUsersSlct, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\n\r\nexport const getPageSizeSelector = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPageSelector = (state) => {\r\n    return  state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetchingSelector = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\n\r\n\r\nexport const getFollowingInProgressSelector = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getIsAuthSelector = (state) => {\r\n    return state.auth.isAuth\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers } from '../../redux/usersReducer'\r\nimport Users from './Users'\r\nimport Preloader from \"../common/preloader/preloader\";\r\nimport { compose } from \"redux\";\r\nimport {getUsersSuperSelector, getPageSizeSelector, getTotalUsersCountSelector, getCurrentPageSelector, getIsFetchingSelector, getFollowingInProgressSelector, getIsAuthSelector} from './../../redux/users-selector'\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (currentPage) => {\r\n        this.props.getUsers(currentPage, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n/* let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n} */\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        totalUsersCount: getTotalUsersCountSelector(state),\r\n        currentPage:  getCurrentPageSelector(state),\r\n        isFetching: getIsFetchingSelector(state),\r\n        followingInProgress: getFollowingInProgressSelector(state),\r\n        isAuth: getIsAuthSelector(state)\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {\r\n        unfollow,\r\n        follow,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        getUsers\r\n    }),\r\n    // withAuthRedirect\r\n) (UsersAPIComponent)\r\n\r\n\r\n/* let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        \r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n\r\n        setCurrentPage: (currentPage) => {\r\n            dispatch(setCurrentPageAC(currentPage));\r\n        }, \r\n\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount));\r\n        }, \r\n\r\n        toogleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    } \r\n} */\r\n","import {authAPI} from './../api/api'\r\nimport {getAuthUserData} from './authReducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n\r\n\r\n}\r\n\r\n","let initialState = \r\n    {\r\n        friends: [\r\n          { id: 1, name: 'Max', avatar: 'http://pngimg.com/uploads/circle/circle_PNG81.png' },\r\n          { id: 2, name: 'Dasha', avatar: 'http://pngimg.com/uploads/circle/circle_PNG81.png' },\r\n          { id: 3, name: 'Kishka', avatar: 'http://pngimg.com/uploads/circle/circle_PNG81.png' }\r\n        ]\r\n      }\r\n\r\n\r\n\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state;\r\n}\r\n\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from './profileReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { appReducer } from \"./appReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport default store; ","import React from 'react';\r\nimport Preloader from \"../common/preloader/preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={Preloader}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n}\r\n\r\n","import './App.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport LoginTest from './components/Login/LoginTest';\nimport News from './components/News/News';\nimport Music from './components/Music/Music.jsx';\nimport Settings from './components/Settings/Settings';\nimport { Route } from 'react-router';\nimport { HashRouter} from 'react-router-dom';\nimport UsersContainer from './components/Users/UsersContainer'\nimport React, { useEffect } from 'react';\nimport {connect, Provider} from 'react-redux';\nimport {initializeApp} from './redux/appReducer'\nimport Preloader from './components/common/preloader/preloader';\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./components/hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\n\nconst App = (props) => {\n\n  useEffect(() => {\n    props.initializeApp()\n  })\n\n  if (!props.initialized) {\n    return <Preloader />\n  }\n\n  return (\n\n    <HashRouter >\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Route path='/dialogs' render={withSuspense(DialogsContainer)} />\n          <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)} />\n          <Route path='/users' render = {() => <UsersContainer /> } />\n          <Route path='/News' render={News} />\n          <Route path='/Music' render={Music} />\n          <Route path='/Settings' render={Settings} />\n          <Route path='/login' render={LoginTest} />\n        </div>\n      </div>\n    </HashRouter>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = connect(mapStateToProps, {initializeApp})(App)\n\n\nlet SamuraiJSApp = (props) => {\n  return     <Provider store = {store} >\n      <AppContainer />\n    </Provider>\n}\n\nexport default SamuraiJSApp\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/preloader.6ae745ce.svg\";","import preloader from './../../../assets/images/preloader.svg'\r\nimport styles from './preloader.module.css'\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return  <img className={styles.preloader} src={preloader}/> \r\n}\r\n\r\n\r\nexport default Preloader","import {profileAPI, usersAPI} from './../api/api'\r\nimport profile from \"../components/Profile/Profile\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst GET_STATUS = 'GET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\nexport const addPostActionCreator = (formikPost) => {\r\n    return {\r\n        type: ADD_POST,\r\n        formikPostText: formikPost\r\n    }\r\n};\r\nexport const onPostChangeActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: text\r\n    }\r\n}\r\nexport const setStatusActionCreator = (status) => {\r\n    return {\r\n        type: GET_STATUS,\r\n        status     /* хз почему тут ничего нет */\r\n    }\r\n}\r\n\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likeCount: 5},\r\n        {id: 2, message: \"I'm fine\", likeCount: 17},\r\n        {id: 2, message: \"What's happening?\", likeCount: 6},\r\n        {id: 2, message: \"Hello\", likeCount: 17}\r\n    ],\r\n\r\n    newPostText: '',\r\n    profile: null,\r\n    status: ''\r\n\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.formikPostText,\r\n                likeCount: 0\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case GET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile,  photos: action.photos}}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUser = (userId) => {\r\n    return async (dispatch) => {\r\n        if (!userId) {\r\n            userId = 2;\r\n        }\r\n        let response = await usersAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response.data))\r\n    }\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatusActionCreator(response.data))\r\n\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatusActionCreator(status))\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default profileReducer;\r\n","export default __webpack_public_path__ + \"static/media/user.02ed7193.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2y5Qo\",\"loginBlock\":\"Header_loginBlock__2Exd-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"paginator_selectedPage__3KB7O\",\"unselectedPage\":\"paginator_unselectedPage__3X1Aa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__1YBCi\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3oPcU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1YSs3\",\"posts\":\"MyPosts_posts__179A9\"};"],"sourceRoot":""}