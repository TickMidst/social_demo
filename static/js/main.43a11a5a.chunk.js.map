{"version":3,"sources":["redux/dialogsReducer.js","components/Users/users.module.css","components/common/preloader/preloader.module.css","components/Profile/MyPosts/Post/Post.module.css","api/api.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Navbar/Navbar.module.css","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Login/LoginTest.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","redux/usersReducer.js","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","redux/users-selector.js","components/Users/UsersContainer.jsx","redux/appReducer.js","redux/sidebarReducer.js","redux/redux-store.js","components/hoc/withSuspense.js","App.js","reportWebVitals.js","index.js","redux/authReducer.js","assets/images/preloader.svg","components/common/preloader/preloader.js","redux/profileReducer.js","assets/images/user.jpg","components/Header/Header.module.css","components/common/Paginator/paginator.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["ADD_MESSAGE","UPDATED_MESSAGE_TEXT","addMessageActionCreator","type","onMessageChangeActionCreator","text","newText","initialState","dialogsData","id","name","avatar","messagesData","message","status","newMessageText","dialogsReducer","state","action","newMessage","module","exports","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","post","unfollow","delete","getProfile","userId","console","warn","profileAPI","getStatus","updateStatus","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","logout","ProfileStatus","props","useState","profileStatus","setProfileStatus","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","target","value","onMouseLeave","autoFocus","ProfileDataForm","validateScheme","yup","shape","fullName","typeError","min","max","aboutMe","lookingForAJobDescription","initialValues","lookingForAJob","validateOnChange","onSubmit","values","goToNotEditMode","onFullNameChange","validationSchema","errors","touched","handleChange","handleBlur","handleSubmit","isValid","dirty","onClick","placeholder","onBlur","checked","htmlFor","Contact","contactTitle","contactValue","ProfileData","isOwner","goToEditMode","Object","keys","contacts","map","key","ProfileInfo","className","s","description","src","photos","large","userPhoto","mainPhoto","files","length","Post","item","likeCount","MyPosts","postsElements","posts","textOfMessage","postsBlock","validateOnBlur","formikText","addPost","disabled","MyPostsContainer","connect","profilePage","newPostText","dispatch","formikPost","addPostActionCreator","onPostChange","onPostChangeActionCreator","Profile","Header","header","loginBlock","isAuth","logoutThunk","to","HeaderContainer","this","React","Component","auth","Navbar","nav","activeClassName","activeLink","loginFormSchema","Yup","required","loginThunk","messages","component","messageError","News","Music","Settings","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unFollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","usersReducer","u","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","p","styles","selectedPage","unselectedPage","Users","small","some","getUsersSuperSelector","createSelector","usersPage","getPageSizeSelector","getTotalUsersCountSelector","getCurrentPageSelector","getIsFetchingSelector","getFollowingInProgressSelector","getIsAuthSelector","UsersAPIComponent","compose","a","resultCode","items","totalCount","INITIALIZED_SUCCESS","initialized","friends","sidebarReducer","reducers","combineReducers","dialogsPage","sidebar","profileReducer","authReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","AppContainer","initializeApp","promise","getAuthUserData","Promise","all","path","render","UsersContainer","SamuraiJSApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","SET_USER_DATA","AUTHORIZE_ME","setAuthUserData","log","alert","preloader","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","GET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","formikPostText","setStatusActionCreator","setUser","file","newPost","postId"],"mappings":"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","file":"static/js/main.43a11a5a.chunk.js","sourcesContent":["const ADD_MESSAGE = 'ADD_MESSAGE';\r\nconst UPDATED_MESSAGE_TEXT = 'UPDATED-MESSAGE-TEXT';\r\n\r\nexport const addMessageActionCreator = () => ({\r\n  type: ADD_MESSAGE\r\n})\r\nexport const onMessageChangeActionCreator = (text) => ({\r\n  type: UPDATED_MESSAGE_TEXT,\r\n  newText: text\r\n})\r\n\r\n\r\nlet initialState = {\r\n  dialogsData: [\r\n    { id: 1, name: 'Andrey', avatar: \"https://qph.fs.quoracdn.net/main-thumb-386254182-200-cjcqqkbawdwgclpwmezovuvcdevyhjxe.jpeg\" },\r\n    { id: 2, name: 'Masha', avatar: 'https://sun9-63.userapi.com/impg/8wa_JrPCDqv2DkGbEreYcXb97YCitafOJc3vzw/y9ibtyKafJI.jpg?size=130x130&quality=96&sign=a40deab55ac22afc3e8842bebe118ca2&c_uniq_tag=ddmbTYmVgnqkkwgt4OW4S7CTosceHQRP8G2GiulQFqY&type=album' },\r\n    { id: 3, name: 'Sasha', avatar: 'https://altaweboldal.hu/wp-content/uploads/2017/03/karpati-zsolt.jpg' },\r\n    { id: 4, name: 'Max', avatar: 'https://imagebox.cz.osobnosti.cz/foto/burak-celik-celik/T750905-9357b.jpg' }\r\n  ],\r\n\r\n  messagesData: [\r\n    { id: 1, message: 'hi', status: 'sent' },\r\n    { id: 2, message: 'Whatsup', status: 'recieved' },\r\n    { id: 3, message: 'How are you', status: 'sent' }\r\n  ],\r\n\r\n  newMessageText: ''\r\n};\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE: {\r\n      let newMessage = {\r\n        id: 4,\r\n        message: state.newMessageText,\r\n        status: \"sent\"\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        newMessageText: '',\r\n        messagesData: [...state.messagesData, newMessage]\r\n      };\r\n    }\r\n\r\n    case UPDATED_MESSAGE_TEXT:\r\n      {\r\n        return {\r\n          ...state,\r\n          newMessageText: action.newText\r\n        };\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__Pp3QU\",\"selectedPage\":\"users_selectedPage__N2iOo\",\"unselectedPage\":\"users_unselectedPage__3bWLm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__1h6HE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2RKCK\"};","import * as axios from \"axios\"\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: { 'API-KEY': 'b82a1b1b-57ed-4d0b-a714-0a5000161903' }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\r\n    },\r\n\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object')\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n\r\n     updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile)\r\n\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`).then(response => response.data)\r\n    },\r\n\r\n    login(email, password, rememberMe = true) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}","import {useEffect, useRef, useState} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [profileStatus, setProfileStatus] = useState(props.status)\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setProfileStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(profileStatus);\r\n    }\r\n\r\n    return <div>\r\n\r\n        {!editMode &&\r\n           <div> <b>Status</b>:\r\n               <span onDoubleClick={() => setEditMode(true)}>\r\n            {props.status || '-----'}\r\n        </span>\r\n            </div>\r\n        }\r\n\r\n        {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={(e) => setProfileStatus(e.target.value)}\r\n                    onMouseLeave={() => deactivateEditMode()}\r\n                    value={profileStatus}\r\n                    autoFocus={true}/>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport React from \"react\";\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n    const validateScheme = yup.object().shape({\r\n        fullName: yup.string().typeError('Должно быть строкой').min(1, 'Напиши хоть что то').max(100, 'Максимум 10 символов'),\r\n        aboutMe: yup.string().typeError('Должно быть строкой').min(1, 'Напиши хоть что то').max(100, 'Максимум 100 символов'),\r\n        lookingForAJobDescription: yup.string().typeError('Должно быть строкой').min(1, 'Напиши хоть что то').max(100, 'Максимум 100 символов'),\r\n\r\n    })\r\n\r\n    const onFullNameChange = (values) => {\r\n      props.onSubmit(values);\r\n      props.goToNotEditMode()\r\n    }\r\n\r\n\r\n    return  <Formik\r\n            initialValues={\r\n                {\r\n                    fullName: props.profile.fullName,\r\n                    aboutMe: props.profile.aboutMe,\r\n                    lookingForAJob: props.profile.lookingForAJob,\r\n                    lookingForAJobDescription: props.profile.lookingForAJobDescription\r\n\r\n                }}\r\n            validateOnChange\r\n            onSubmit={(values) => {onFullNameChange(values)}}\r\n            validationSchema={validateScheme}\r\n        >\r\n            {\r\n                ({\r\n                     values,\r\n                     errors,\r\n                     touched,\r\n                     handleChange,\r\n                     handleBlur,\r\n                     isValid,\r\n                     handleSubmit,\r\n                     dirty\r\n                 }\r\n                ) => {\r\n                    return <div>\r\n                        <div>\r\n                            <button\r\n                            onClick={handleSubmit}\r\n                            type={'submit'}>\r\n                            Сохранить\r\n                        </button></div>\r\n                        <div>\r\n                            <b>Full Name</b>:\r\n                            <input\r\n                                type={'text'}\r\n                                name={'fullName'}\r\n                                placeholder={values.fullName}\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                value={values.fullName}\r\n                            />\r\n                            {touched.fullName && errors.fullName && <p>{errors.fullName}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <b>Lookin' for a job</b>:\r\n                            <input\r\n                                type={'checkbox'}\r\n                                name={'lookingForAJob'}\r\n                                value={values.lookingForAJob}\r\n                                onChange={handleChange}\r\n                                checked={values.lookingForAJob ? true : false}/>\r\n                            <label htmlFor=\"lookingForAJob\">Yes</label>\r\n                        </div>\r\n                        {values.lookingForAJob && <div><b>My professional skills</b>:\r\n                            <input\r\n                                type={'text'}\r\n                                name={'lookingForAJobDescription'}\r\n                                placeholder={values.lookingForAJobDescription}\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                value={values.lookingForAJobDescription}\r\n                            />\r\n                            {touched.fullName && errors.fullName && <p>{errors.fullName}</p>}\r\n                        </div>}\r\n\r\n\r\n                        <div>\r\n                            <b>About me</b>:\r\n                            <input\r\n                                type={'text'}\r\n                                name={'aboutMe'}\r\n                                placeholder={values.aboutMe}\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                value={values.aboutMe}\r\n                            />\r\n                            {touched.aboutMe && errors.aboutMe && <p>{errors.aboutMe}</p>}\r\n                        </div>\r\n                    </div>\r\n                }\r\n            }\r\n        </Formik>\r\n\r\n}\r\n\r\n\r\nexport default ProfileDataForm","import Preloader from '../../common/preloader/preloader';\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport userPhoto from './../../../assets/images/user.jpg'\r\nimport Profile from \"../Profile\";\r\nimport {useState} from \"react\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData)\r\n    }\r\n\r\n\r\n    return <div>\r\n\r\n        <div className={s.description}>\r\n            <img src={props.profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n            {\r\n                props.isOwner ? <div><input type={'file'} onChange={onMainPhotoSelected}/></div> : <div></div>\r\n            }\r\n\r\n            {editMode\r\n                ? <ProfileDataForm {...props} onSubmit={onSubmit} goToNotEditMode={() => {\r\n                    setEditMode(false)}} />\r\n                : <ProfileData {...props} goToEditMode={() => {\r\n                    setEditMode(true)\r\n                }}/>}\r\n\r\n\r\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n}\r\n\r\n\r\nconst ProfileData = (props) => {\r\n    return <div>\r\n        {props.isOwner && <button onClick={() => props.goToEditMode()}>Редактировать</button>}\r\n        <div>\r\n            <b>Full Name</b>: {props.profile.fullName}\r\n        </div>\r\n\r\n        <div>\r\n            <b>Lookin' for a job</b>: {props.profile.lookingForAJob ? 'Yes' : 'No'}\r\n        </div>\r\n\r\n        {props.profile.lookingForAJob &&\r\n            <div><b>My professional skills</b>: {props.profile.lookingForAJobDescription} </div>}\r\n\r\n        <div>\r\n            <b>About me</b>: {props.profile.aboutMe}\r\n        </div>\r\n\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key =>\r\n            <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n        )}\r\n        </div>\r\n\r\n\r\n    </div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import s from './Post.module.css'\r\n\r\n\r\nconst Post = (props) => {\r\n    return    (\r\n    <div className={s.item}>\r\n      <img src='https://cs13.pikabu.ru/post_img/2021/04/15/5/og_og_1618467397286014585.jpg'></img>\r\n      {props.message}\r\n      <div>\r\n      {props.likeCount} likes\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Post;","import s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport React from 'react'\r\nimport { Formik } from \"formik\"\r\nimport * as yup from 'yup'\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postsElements = props.posts.map((post) => <Post message={post.message} likeCount={post.likeCount} />\r\n  )\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n\r\n  let onAddPost = (formikText) => {\r\n    props.addPost(formikText)\r\n  }\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.onPostChange(text)\r\n  }\r\n\r\n\r\n  const validateScheme = yup.object().shape({\r\n    textOfMessage: yup.string().typeError('Должно быть строкой').min(1, 'Напиши хоть что то').max(10, 'Максимум 10 символов')\r\n  })\r\n\r\n\r\n  return  <div> \r\n  <div className={s.postsBlock}>\r\n    <h3>My posts</h3>\r\n\r\n    <div>\r\n    <Formik\r\n    initialValues={\r\n      {\r\n        textOfMessage: ''\r\n      }\r\n    }\r\n    validateOnBlur\r\n    onSubmit={(values)=> {onAddPost(values.textOfMessage)}}\r\n    validationSchema = {validateScheme}\r\n    >\r\n      {\r\n        ({values,\r\n           errors,\r\n           touched,\r\n           handleChange,\r\n           handleBlur,\r\n           isValid,\r\n           handleSubmit,\r\n           dirty}) => {\r\n          return (\r\n          <div>\r\n            <input\r\n              type={'text'}\r\n              name={'textOfMessage'}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.textOfMessage}\r\n            />\r\n            {touched.textOfMessage && errors.textOfMessage && <p>{errors.textOfMessage}</p>}\r\n\r\n            <button\r\n                        disabled={!touched.textOfMessage}\r\n                        onClick={handleSubmit}\r\n                        type={'submit'}\r\n                        >\r\n                            Отправить\r\n                        </button>\r\n\r\n          </div>)\r\n        }\r\n      }\r\n\r\n    </Formik>\r\n    </div>\r\n\r\n\r\n    <div className={s.posts}>\r\n      {postsElements}\r\n    </div>\r\n    </div>\r\n\r\n  <div>\r\n\r\n    \r\n  </div>\r\n\r\n  </div>\r\n}\r\n\r\n\r\nexport default MyPosts;","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { onPostChangeActionCreator, addPostActionCreator } from './../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts'\r\n\r\nconst mapStateToProps = (state) => {\r\nreturn {\r\n  posts: state.profilePage.posts,\r\n  newPostText: state.profilePage.newPostText\r\n}\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (formikPost) => {dispatch(addPostActionCreator(formikPost))},\r\n    onPostChange: (text) => {dispatch(onPostChangeActionCreator(text))}\r\n  }\r\n}\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\n\r\nexport default MyPostsContainer;","import ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n    return        <div>\r\n      <ProfileInfo  isOwner={props.isOwner}\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatus}\r\n                    savePhoto={props.savePhoto}\r\n                    saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n  </div>\r\n}\r\n\r\n\r\nexport default Profile;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3k6Rn\",\"item\":\"Navbar_item__18p5_\",\"activeLink\":\"Navbar_activeLink__1uXrs\",\"friendBlock\":\"Navbar_friendBlock__2eChD\"};","import { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://avatars.mds.yandex.net/get-zen-logos/1520972/pub_5c6700cfb704ed00affe9fc5_5e6674fc8b6d587d1e98ba40/xxh'/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ? <div>\r\n                <div>{props.login}</div>\r\n                <button onClick={props.logoutThunk}>Logout</button>\r\n            </div> : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n      </header> \r\n}\r\n// работает херово, не выкидывает сразу из системы! ПЕРЕДЕЛАТЬ\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {logoutThunk} from \"../../redux/authReducer\";\r\n\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n    return <Header {...this.props}/>\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n isAuth: state.auth.isAuth,\r\n login: state.auth.login,\r\n}\r\n)\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {logoutThunk})(HeaderContainer)","import s from'./Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\nimport Sidebar from './Sidebar/Sidebar.jsx'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    return       <nav className={s.nav}>\r\n    <div className={s.item} >\r\n      <NavLink to='/profile/' activeClassName={s.activeLink}>Profile</NavLink>\r\n    </div>\r\n\r\n    <div className={s.item}>\r\n      <NavLink to='/dialogs/' activeClassName={s.activeLink}>Messages</NavLink>\r\n    </div>\r\n\r\n    <div className={s.item} > \r\n      <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to='/news/' activeClassName={s.activeLink}>News</NavLink>\r\n    </div>\r\n\r\n    <div className={s.item}>\r\n      <NavLink to='/music/' activeClassName={s.activeLink}>Music</NavLink>\r\n    </div>\r\n\r\n    <div className={s.item}>\r\n      <NavLink to='/settings/' activeClassName={s.activeLink}>Settings</NavLink>\r\n    </div>\r\n\r\n    <div>\r\n      Friends\r\n    </div>\r\n{/*  <div className={s.friendBlock}>\r\n    <Sidebar friends={props.state.friends} />\r\n    </div> */} \r\n  </nav>\r\n}\r\n\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport * as Yup from 'yup';\r\n\r\nimport { loginThunk } from '../../redux/authReducer';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst loginFormSchema = Yup.object({\r\n  email: Yup.string().email('Invalid e-mail').required('Required'),\r\n  password: Yup.string().min(8, 'Must be longer than 8 characters').required('Required'),\r\n});\r\n\r\nconst LoginTest = (props) => {\r\n\r\n  const onSubmit = (values) => {\r\n        props.loginThunk(values.email, values.password, values.rememberMe);\r\n  }\r\n\r\n\r\n  if (props.isAuth) {return <Redirect to='/profile' />} // НЕ РАБОТАЕТ\r\n  return (\r\n    <div>\r\n\r\n      <h1>Log in</h1>\r\n\r\n      <Formik\r\n\r\n        initialValues={{ email: '', password: '', rememberMe: true , messages: null}}\r\n\r\n        validationSchema={loginFormSchema}\r\n\r\n        onSubmit={(values) => onSubmit(values)}\r\n\r\n      >\r\n\r\n        {() => (\r\n\r\n          <Form>\r\n\r\n            <div>\r\n\r\n              <Field type='email' name='email' placeholder='e-mail' />\r\n\r\n              <ErrorMessage name='email' component='p' />\r\n\r\n            </div>\r\n\r\n            <div>\r\n\r\n              <Field type='password' name='password' placeholder='password' />\r\n\r\n              <ErrorMessage name='password' component='p' />\r\n\r\n            </div>\r\n\r\n            <div>\r\n\r\n              <Field type='checkbox' name='rememberMe' />\r\n\r\n              <label htmlFor='rememberMe'>remember me</label>\r\n\r\n            </div>\r\n\r\n            <button type='submit'>Log in</button>\r\n\r\n            <p>{props.messageError}</p>\r\n\r\n          </Form>\r\n\r\n        )}\r\n\r\n      </Formik>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    isAuth : state.isAuth\r\n}}\r\n\r\nexport default connect(mapStateToProps, {loginThunk}) (LoginTest);\r\n","const News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default News;","const Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Music;","const Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Settings;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unFollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        let response = await usersAPI.follow(userId)\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(followSuccess(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        let response = await usersAPI.unfollow(userId)\r\n            if (response.data.resultCode == 0) {\r\n                dispatch(unFollowSuccess(userId))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","import styles from \"./paginator.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return (\r\n            <div>\r\n                {portionNumber > 1 &&\r\n                <button onClick={() => setPortionNumber(1)}>First Page</button>\r\n                }\r\n\r\n                {portionNumber > 1 &&\r\n                    <button onClick={ () => setPortionNumber(portionNumber - 1)}> Previous </button>}\r\n\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map((p) => {return <span className={p === currentPage ? styles.selectedPage : styles.unselectedPage} key={p} onClick={(e) => onPageChanged(p)}> {p} </span>})}\r\n\r\n                {portionNumber < portionCount &&\r\n                <button onClick={ () => setPortionNumber(portionNumber + 1)}>Next</button>}\r\n\r\n\r\n                {portionNumber < portionCount &&\r\n                    <button onClick={() => setPortionNumber(portionCount)}>Last Page</button>\r\n                }\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport styles from './users.module.css';\r\nimport userPhoto from './../../assets/images/user.jpg'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\n\r\nlet Users = (props) => {\r\n    return <div>\r\n        <Paginator currentPage={props.currentPage} totalItemsCount={props.totalUsersCount} pageSize={props.pageSize} onPageChanged={props.onPageChanged}/>\r\n\r\n\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={`/profile/` + u.id}> <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto} /> </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => props.unfollow(u.id)}>Unfollow</button>\r\n\r\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => props.follow(u.id)}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.city\"}</div>\r\n                        <div>{\"u.location.country\"}</div>\r\n\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Users","import { createSelector } from \"reselect\"\r\n\r\n\r\nconst getUsersSlct = (state) => {\r\n    return state.usersPage.users\r\n} \r\n\r\nexport const getUsersSuperSelector = createSelector(getUsersSlct, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\n\r\nexport const getPageSizeSelector = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPageSelector = (state) => {\r\n    return  state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetchingSelector = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\n\r\n\r\nexport const getFollowingInProgressSelector = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getIsAuthSelector = (state) => {\r\n    return state.auth.isAuth\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers } from '../../redux/usersReducer'\r\nimport Users from './Users'\r\nimport Preloader from \"../common/preloader/preloader\";\r\nimport { compose } from \"redux\";\r\nimport {getUsersSuperSelector, getPageSizeSelector, getTotalUsersCountSelector, getCurrentPageSelector, getIsFetchingSelector, getFollowingInProgressSelector, getIsAuthSelector} from './../../redux/users-selector'\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (currentPage) => {\r\n        this.props.getUsers(currentPage, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n/* let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n} */\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        totalUsersCount: getTotalUsersCountSelector(state),\r\n        currentPage:  getCurrentPageSelector(state),\r\n        isFetching: getIsFetchingSelector(state),\r\n        followingInProgress: getFollowingInProgressSelector(state),\r\n        isAuth: getIsAuthSelector(state)\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {\r\n        unfollow,\r\n        follow,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        getUsers\r\n    }),\r\n    // withAuthRedirect\r\n) (UsersAPIComponent)\r\n\r\n\r\n/* let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        \r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n\r\n        setCurrentPage: (currentPage) => {\r\n            dispatch(setCurrentPageAC(currentPage));\r\n        }, \r\n\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount));\r\n        }, \r\n\r\n        toogleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    } \r\n} */\r\n","import {authAPI} from './../api/api'\r\nimport {getAuthUserData} from './authReducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n\r\n\r\n}\r\n\r\n","let initialState = \r\n    {\r\n        friends: [\r\n          { id: 1, name: 'Max', avatar: 'http://pngimg.com/uploads/circle/circle_PNG81.png' },\r\n          { id: 2, name: 'Dasha', avatar: 'http://pngimg.com/uploads/circle/circle_PNG81.png' },\r\n          { id: 3, name: 'Kishka', avatar: 'http://pngimg.com/uploads/circle/circle_PNG81.png' }\r\n        ]\r\n      }\r\n\r\n\r\n\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state;\r\n}\r\n\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from './profileReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { appReducer } from \"./appReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport default store; ","import React from 'react';\r\nimport Preloader from \"../common/preloader/preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={Preloader}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n}\r\n\r\n","import './App.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport LoginTest from './components/Login/LoginTest';\nimport News from './components/News/News';\nimport Music from './components/Music/Music.jsx';\nimport Settings from './components/Settings/Settings';\nimport { Route } from 'react-router';\nimport { HashRouter} from 'react-router-dom';\nimport UsersContainer from './components/Users/UsersContainer'\nimport React, { useEffect } from 'react';\nimport {connect, Provider} from 'react-redux';\nimport {initializeApp} from './redux/appReducer'\nimport Preloader from './components/common/preloader/preloader';\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./components/hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\n\nconst App = (props) => {\n\n  useEffect(() => {\n    props.initializeApp()\n  })\n\n  if (!props.initialized) {\n    return <Preloader />\n  }\n\n  return (\n\n    <HashRouter >\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Route path='/dialogs' render={withSuspense(DialogsContainer)} />\n          <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)} />\n          <Route path='/users' render = {() => <UsersContainer /> } />\n          <Route path='/News' render={News} />\n          <Route path='/Music' render={Music} />\n          <Route path='/Settings' render={Settings} />\n          <Route path='/login' render={() => <LoginTest />} />\n        </div>\n      </div>\n    </HashRouter>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = connect(mapStateToProps, {initializeApp})(App)\n\n\nlet SamuraiJSApp = (props) => {\n  return     <Provider store = {store} >\n      <AppContainer />\n    </Provider>\n}\n\nexport default SamuraiJSApp\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {authAPI} from './../api/api'\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA'\r\nconst AUTHORIZE_ME = 'AUTHORIZE_ME'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n\r\n        case AUTHORIZE_ME:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA, data: {id, email, login, isAuth}})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.resultCode === 0) {\r\n        let {id, email, login} = response.data;\r\n        console.log({id, email, login})\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const authMe = () => {\r\n    return (dispatch) => {\r\n        authAPI.me().then(data => {\r\n            if (data.resultCode === 0) {\r\n                let {id, email, login} = data.data\r\n\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const loginThunk = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        alert(\"Не вышло\")\r\n    }\r\n}\r\n\r\nexport const logoutThunk = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;\r\n","export default __webpack_public_path__ + \"static/media/preloader.6ae745ce.svg\";","import preloader from './../../../assets/images/preloader.svg'\r\nimport styles from './preloader.module.css'\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return  <img className={styles.preloader} src={preloader}/> \r\n}\r\n\r\n\r\nexport default Preloader","import {authAPI, profileAPI, usersAPI} from './../api/api'\r\nimport profile from \"../components/Profile/Profile\";\r\nimport {setAuthUserData} from \"./authReducer\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst GET_STATUS = 'GET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\nexport const addPostActionCreator = (formikPost) => {\r\n    return {\r\n        type: ADD_POST,\r\n        formikPostText: formikPost\r\n    }\r\n};\r\nexport const onPostChangeActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: text\r\n    }\r\n}\r\nexport const setStatusActionCreator = (status) => {\r\n    return {\r\n        type: GET_STATUS,\r\n        status     /* хз почему тут ничего нет */\r\n    }\r\n}\r\n\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likeCount: 5},\r\n        {id: 2, message: \"I'm fine\", likeCount: 17},\r\n        {id: 2, message: \"What's happening?\", likeCount: 6},\r\n        {id: 2, message: \"Hello\", likeCount: 17}\r\n    ],\r\n\r\n    newPostText: '',\r\n    profile: null,\r\n    status: ''\r\n\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.formikPostText,\r\n                likeCount: 0\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case GET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile,  photos: action.photos}}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUser = (userId) => {\r\n    return async (dispatch) => {\r\n        if (!userId) { // ПЕРЕДЕЛАТЬ, ИЗМЕНИТЬ\r\n            let response = await authAPI.me();\r\n            if (response.resultCode === 0) {\r\n                let {id, email, login} = response.data;\r\n                userId = id\r\n            };\r\n\r\n        }\r\n        let response = await usersAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response.data))\r\n    }\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatusActionCreator(response.data))\r\n\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatusActionCreator(status))\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch) => {\r\n    let response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        // ОСТАНОВИЛСЯ ТУТ!\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default profileReducer;\r\n","export default __webpack_public_path__ + \"static/media/user.02ed7193.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3h_OJ\",\"loginBlock\":\"Header_loginBlock__11KJT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"paginator_selectedPage__3FI06\",\"unselectedPage\":\"paginator_unselectedPage__2R9eR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__3cwrt\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2Vj5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2yNMy\",\"posts\":\"MyPosts_posts__I0uaY\"};"],"sourceRoot":""}